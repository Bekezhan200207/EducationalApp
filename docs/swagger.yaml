basePath: /
definitions:
  handlers.userResponse:
    properties:
      email:
        type: string
      name:
        type: string
      surname:
        type: string
      user_type:
        type: string
      uuid:
        type: string
    type: object
  models.ApiError:
    properties:
      error:
        type: string
    type: object
  models.Course:
    properties:
      course_id:
        type: integer
      course_title:
        type: string
      created_at:
        type: string
      description:
        type: string
      is_published:
        type: boolean
      updated_at:
        type: string
    type: object
  models.Lesson:
    properties:
      created_at:
        type: string
      description:
        type: string
      duration_sec:
        type: integer
      id:
        type: integer
      interest:
        type: string
      is_published:
        type: boolean
      level:
        type: string
      order:
        type: integer
      subject_id:
        description: under question
        type: integer
      target_age_max:
        type: integer
      target_age_min:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      video_data:
        items:
          type: integer
        type: array
      video_filename:
        type: string
      video_mime_type:
        type: string
    type: object
  models.Subject:
    properties:
      id:
        type: integer
      title:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open.api/
host: api.ozinshe.com
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: this is a Educational Application project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: EdTech API
  version: "1.0"
paths:
  /auth/signIn:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              token:
                type: string
            type: object
        "400":
          description: Invalid request Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "401":
          description: Invalid credentials
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      summary: User SignIn func using email and password
      tags:
      - users
  /auth/signUp:
    post:
      consumes:
      - application/json
      parameters:
      - description: Name
        in: query
        name: name
        required: true
        type: string
      - description: Surname
        in: query
        name: surname
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      - description: User_Type
        in: query
        name: type
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              uuid:
                type: string
            type: object
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Create User
      tags:
      - users
  /auth/singOut:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
      security:
      - Bearer: []
      summary: Sign out
      tags:
      - users
  /auth/userInfo:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.userResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Get user Info
      tags:
      - users
  /courses:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Course'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: find all courses
      tags:
      - courses
    post:
      consumes:
      - application/json
      parameters:
      - description: title
        in: query
        name: title
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      - description: is_published
        in: query
        name: is_published
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: create course
      tags:
      - courses
  /courses/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: delete course by id
      tags:
      - courses
    get:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Course'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: find course by id
      tags:
      - courses
    put:
      consumes:
      - application/json
      parameters:
      - description: title
        in: query
        name: title
        required: true
        type: string
      - description: description
        in: query
        name: description
        required: true
        type: string
      - description: is_published
        in: query
        name: is_published
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: update course
      tags:
      - courses
  /lessons:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Lesson'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Find all lessons
      tags:
      - lessons
    post:
      consumes:
      - application/json
      parameters:
      - description: Lesson_title
        in: query
        name: title
        required: true
        type: string
      - description: Lesson_description
        in: query
        name: description
        required: true
        type: string
      - description: Lesson_subject_id
        in: query
        name: subject_id
        required: true
        type: integer
      - description: Topic_order
        in: query
        name: order
        required: true
        type: integer
      - description: Lessons_level
        in: query
        name: level
        required: true
        type: string
      - description: Lessons_interest
        in: query
        name: interest
        required: true
        type: string
      - description: minimum age for viewing lesson
        in: query
        name: target_age_min
        required: true
        type: integer
      - description: maximum age for viewing lesson
        in: query
        name: target_age_max
        required: true
        type: integer
      - description: Lessons_video
        in: query
        name: video_data
        required: true
        type: string
      - description: Lessons_video_filename
        in: query
        name: video_filename
        required: true
        type: string
      - description: Lessons_video_MIME-type
        in: query
        name: video_mime_type
        required: true
        type: string
      - description: Lessons_video_duration_seconds
        in: query
        name: duration_sec
        required: true
        type: string
      - description: lessons_video_is_published
        in: query
        name: is_published
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Create Lesson
      tags:
      - lessons
  /lessons/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Lesson_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: delete lesson by id
      tags:
      - lessons
    get:
      consumes:
      - application/json
      parameters:
      - description: Lesson_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Lesson'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: find lesson by id
      tags:
      - lessons
    put:
      consumes:
      - application/json
      parameters:
      - description: Lesson_id
        in: path
        name: id
        required: true
        type: integer
      - description: Lesson_title
        in: query
        name: title
        required: true
        type: string
      - description: Lesson_description
        in: query
        name: description
        required: true
        type: string
      - description: Lesson_subject_id
        in: query
        name: subject_id
        required: true
        type: integer
      - description: Topic_order
        in: query
        name: order
        required: true
        type: integer
      - description: Lessons_level
        in: query
        name: level
        required: true
        type: string
      - description: Lessons_interest
        in: query
        name: interest
        required: true
        type: string
      - description: minimum age for viewing lesson
        in: query
        name: target_age_min
        required: true
        type: integer
      - description: maximum age for viewing lesson
        in: query
        name: target_age_max
        required: true
        type: integer
      - description: Lessons_video
        in: query
        name: video_data
        required: true
        type: string
      - description: Lessons_video_filename
        in: query
        name: video_filename
        required: true
        type: string
      - description: Lessons_video_MIME-type
        in: query
        name: video_mime_type
        required: true
        type: string
      - description: Lessons_video_duration_seconds
        in: query
        name: duration_sec
        required: true
        type: string
      - description: lessons_video_is_published
        in: query
        name: is_published
        required: true
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Update Lesson
      tags:
      - lessons
  /subjects:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subject'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: find all subjects
      tags:
      - subjects
  /subjects/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Subject_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: delete subject by id
      tags:
      - subjects
    get:
      consumes:
      - application/json
      parameters:
      - description: Subject_id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subject'
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: find subject by id
      tags:
      - subjects
    post:
      consumes:
      - application/json
      parameters:
      - description: Subject_title
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              id:
                type: integer
            type: object
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: create subject
      tags:
      - subjects
    put:
      consumes:
      - application/json
      parameters:
      - description: Subject_title
        in: query
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Invalid Payload
          schema:
            $ref: '#/definitions/models.ApiError'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: update subject
      tags:
      - subjects
  /users:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/handlers.userResponse'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Get All Users
      tags:
      - users
  /users/{email}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Email
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.userResponse'
        "400":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Find By Email
      tags:
      - users
  /users/{uuid}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.userResponse'
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Find By Id
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: User Name
        in: query
        name: name
        required: true
        type: string
      - description: User Surname
        in: query
        name: surname
        required: true
        type: string
      - description: Email
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: Update User
      tags:
      - users
  /users/{uuid}/activate:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: set user status to active
      tags:
      - users
  /users/{uuid}/changePassword:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      - description: Password
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: ChangePassword User
      tags:
      - users
  /users/{uuid}/deactivate:
    patch:
      consumes:
      - application/json
      parameters:
      - description: User UUID
        in: path
        name: uuid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Invalid user uuid
          schema:
            $ref: '#/definitions/models.ApiError'
      security:
      - Bearer: []
      summary: set user status to inactive
      tags:
      - users
swagger: "2.0"
